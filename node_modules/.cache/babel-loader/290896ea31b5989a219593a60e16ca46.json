{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { TextField, Checkbox, Button } from '@material-ui/core';\nimport { RadioButtonsGroup } from './RadioGroup';\nexport const Form = () => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    checked: true\n  });\n  const [checked, setChecked] = useState(true); // const [radioChecked, setRadioChecked] = useState('female');\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleCheck = event => setChecked(event.target.checked); // const handleRadioCheck = event => {\n  //   console.log(event);\n  //   setRadioChecked(!radioChecked)\n  // };\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitted();\n  };\n\n  function submitted() {\n    console.log(\"submitted successfully\");\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    name: \"name\",\n    label: \"Name\",\n    autoComplete: \"off\" // helperText=\"Some important text\"\n    ,\n    variant: \"outlined\",\n    value: values.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    name: \"email\",\n    label: \"Email\",\n    autoComplete: \"off\" // helperText=\"Some important text\"\n    ,\n    variant: \"outlined\",\n    value: values.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    name: \"password\",\n    label: \"Password\",\n    autoComplete: \"off\",\n    type: \"password\",\n    variant: \"outlined\",\n    value: values.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleCheck,\n    value: \"secondary\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"A checkbox is a GUI widget that permits the user to make a binary choice\")), React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/components/Form.js"],"names":["React","useState","TextField","Checkbox","Button","RadioButtonsGroup","Form","values","setValues","name","email","password","checked","setChecked","handleChange","event","value","target","handleCheck","handleSubmit","preventDefault","submitted","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { TextField, Checkbox, Button } from '@material-ui/core';\nimport { RadioButtonsGroup } from './RadioGroup';\n\nexport const Form = () => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    checked: true\n  });\n\n  const [checked, setChecked] = useState(true);\n  // const [radioChecked, setRadioChecked] = useState('female');\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setValues({\n      ...values,\n    [name]: value\n    })\n  };\n\n  const handleCheck = event => setChecked(event.target.checked);\n\n  // const handleRadioCheck = event => {\n  //   console.log(event);\n  //   setRadioChecked(!radioChecked)\n  // };\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitted();\n  };\n\n  function submitted() {\n    console.log(\"submitted successfully\");\n  }\n  \n  return (\n    <form onSubmit={handleSubmit} noValidate>\n      <div className=\"form\">\n        <TextField\n          required\n          name=\"name\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          // helperText=\"Some important text\"\n          variant=\"outlined\"\n          value={values.name}\n          onChange={handleChange}\n        />\n        {/*<RadioButtonsGroup*/}\n        {/*  value={values.gender}*/}\n        {/*  onChange={handleChange}*/}\n        {/*/>*/}\n        <TextField\n          required\n          name=\"email\"\n          label=\"Email\"\n          autoComplete=\"off\"\n          // helperText=\"Some important text\"\n          variant=\"outlined\"\n          value={values.email}\n          onChange={handleChange}\n        />\n        <TextField\n          required\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          type=\"password\"\n          variant=\"outlined\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        <div className=\"form-checkbox\">\n          <Checkbox\n            checked={checked}\n            onChange={handleCheck}\n            value=\"secondary\"\n            color=\"primary\"\n          />\n          <p>A checkbox is a GUI widget that permits the user to make a binary choice</p>\n        </div>\n        <Button variant=\"contained\">SUBMIT</Button>\n      </div>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}