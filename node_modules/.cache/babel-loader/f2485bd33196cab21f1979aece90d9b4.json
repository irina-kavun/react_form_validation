{"ast":null,"code":"import { useState } from 'react';\nexport const useForm = callback => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    checked: true\n  }); // const [checked, setChecked] = useState(true);\n\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      checked\n    } = event.target;\n    setValues({ ...values,\n      [name]: value,\n      checked: checked\n    });\n  }; // const handleCheck = event => setChecked(event.target.checked);\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    values,\n    // checked,\n    handleChange,\n    // handleCheck,\n    handleSubmit\n  };\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/useForm.js"],"names":["useState","useForm","callback","values","setValues","name","email","password","checked","handleChange","event","value","target","handleSubmit","preventDefault"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,GAAD,CAApC,CADiC,CAQjC;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAM;AAACL,MAAAA,IAAD;AAAOM,MAAAA,KAAP;AAAcH,MAAAA;AAAd,QAAyBE,KAAK,CAACE,MAArC;AACAR,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQM,KAFA;AAGRH,MAAAA,OAAO,EAAEA;AAHD,KAAD,CAAT;AAKD,GAPD,CAViC,CAmBjC;;;AAEA,QAAMK,YAAY,GAAGH,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACI,cAAN;AACAZ,IAAAA,QAAQ;AACT,GAHD;;AAIA,SAAO;AACLC,IAAAA,MADK;AAEL;AACAM,IAAAA,YAHK;AAIL;AACAI,IAAAA;AALK,GAAP;AAOD,CAhCM","sourcesContent":["import { useState } from 'react';\n\nexport const useForm = callback => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    checked: true\n  });\n\n  // const [checked, setChecked] = useState(true);\n\n  const handleChange = event => {\n    const {name, value, checked} = event.target;\n    setValues({\n      ...values,\n      [name]: value,\n      checked: checked\n    })\n  };\n\n  // const handleCheck = event => setChecked(event.target.checked);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n  return {\n    values,\n    // checked,\n    handleChange,\n    // handleCheck,\n    handleSubmit\n  }\n};"]},"metadata":{},"sourceType":"module"}