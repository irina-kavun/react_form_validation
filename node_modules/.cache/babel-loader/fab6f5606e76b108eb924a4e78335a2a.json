{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm.js\";\nimport React, { Fragment } from 'react';\nimport { useFormik } from 'formik';\nimport { validationSchema } from '../validation/validationSchema';\nimport { Button, TextField, FormControlLabel, Checkbox, Radio } from \"@material-ui/core\";\nexport const FormikForm = () => {\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      gender: '',\n      isEnabled: true\n    },\n    validationSchema,\n\n    onSubmit(values) {\n      console.log(values);\n    }\n\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Form Validation with Formik\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.name\n  }, errors.name && {\n    helperText: errors.name,\n    error: true\n  }, {\n    name: \"name\",\n    label: \"Name\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.email\n  }, errors.email && {\n    helperText: errors.email,\n    error: true\n  }, {\n    name: \"email\",\n    label: \"Email\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Radio, {\n    checked: true,\n    name: \"gender\",\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Radio, {\n    name: \"gender\",\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Radio, {\n    name: \"gender\",\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.password\n  }, errors.password && {\n    helperText: errors.password,\n    error: true\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      type: \"checkbox\",\n      checked: values.isEnabled,\n      onChange: handleChange(\"isEnabled\"),\n      name: \"isEnabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    label: \"This is a consent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), errors.isEnabled && React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, errors.isEnabled), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm.js"],"names":["React","Fragment","useFormik","validationSchema","Button","TextField","FormControlLabel","Checkbox","Radio","FormikForm","handleChange","handleSubmit","values","errors","initialValues","name","email","password","gender","isEnabled","onSubmit","console","log","helperText","error"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {useFormik} from 'formik';\n\nimport {validationSchema} from '../validation/validationSchema';\n\nimport {Button, TextField, FormControlLabel, Checkbox, Radio} from \"@material-ui/core\";\n\nexport const FormikForm = () => {\n  const {handleChange, handleSubmit, values, errors} = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      gender: '',\n      isEnabled: true,\n    },\n    validationSchema,\n    onSubmit(values) {\n      console.log(values)\n    }\n  });\n\n  return (\n    <Fragment>\n      <h1 className=\"page-title\">Form Validation with Formik</h1>\n      <form onSubmit={handleSubmit} noValidate className=\"form\">\n        <TextField\n          required\n          onChange={handleChange}\n          values={values.name}\n          {...errors.name && {helperText: errors.name, error: true}}\n          name=\"name\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n        <TextField\n          required\n          onChange={handleChange}\n          values={values.email}\n          {...errors.email && {helperText: errors.email, error: true}}\n          name=\"email\"\n          label=\"Email\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n\n          <Radio checked name=\"gender\" value=\"male\"/>\n          <Radio name=\"gender\" value=\"female\"/>\n          <Radio name=\"gender\" value=\"other\"/>\n   \n        <TextField\n          required\n          onChange={handleChange}\n          values={values.password}\n          {...errors.password && {helperText: errors.password, error: true}}\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n        <FormControlLabel\n          control={<Checkbox\n            type=\"checkbox\"\n            checked={values.isEnabled}\n            onChange={handleChange(\"isEnabled\")}\n            name=\"isEnabled\"\n          />} label=\"This is a consent\"\n        />\n        {errors.isEnabled && <div className=\"form-field-error\">{errors.isEnabled}</div>}\n        <Button type=\"submit\" variant=\"contained\">SUBMIT</Button>\n      </form>\n    </Fragment>\n  )\n};"]},"metadata":{},"sourceType":"module"}