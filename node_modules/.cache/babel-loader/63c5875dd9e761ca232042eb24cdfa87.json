{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { useForm } from '../useForm';\nimport { TextField, Checkbox, Button } from '@material-ui/core';\nimport { RadioButtonsGroup } from './RadioGroup';\nexport const Form = () => {\n  const {\n    values,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit\n  } = useForm(submitted);\n\n  function submitted() {\n    console.log(\"submitted successfully\");\n  }\n\n  const [value, setValue] = useState('female');\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    name: \"name\",\n    label: \"Name\",\n    autoComplete: \"off\" // helperText=\"Some important text\"\n    ,\n    variant: \"outlined\",\n    value: values.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(RadioButtonsGroup, {\n    value: value,\n    onChange: val => setValue(val),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    name: \"email\",\n    label: \"Email\",\n    autoComplete: \"off\" // helperText=\"Some important text\"\n    ,\n    variant: \"outlined\",\n    value: values.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    name: \"password\",\n    label: \"Password\",\n    autoComplete: \"off\",\n    type: \"password\",\n    variant: \"outlined\",\n    value: values.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleCheck,\n    value: \"secondary\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"A checkbox is a GUI widget that permits the user to make a binary choice\")), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/components/Form.js"],"names":["React","useState","useForm","TextField","Checkbox","Button","RadioButtonsGroup","Form","values","checked","handleChange","handleCheck","handleSubmit","submitted","console","log","value","setValue","name","val","email","password"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,mBAA5C;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA;AALI,MAMFV,OAAO,CAACW,SAAD,CANX;;AAQA,WAASA,SAAT,GAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAED,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,QAAD,CAAlC;AAEA,SACE;AAAM,IAAA,QAAQ,EAAEW,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,YAAY,EAAC,KAJf,CAKE;AALF;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,KAAK,EAAEJ,MAAM,CAACU,IAPhB;AAQE,IAAA,QAAQ,EAAER,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAEM,KADT;AAEE,IAAA,QAAQ,EAAEG,GAAG,IAAIF,QAAQ,CAACE,GAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAeE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,YAAY,EAAC,KAJf,CAKE;AALF;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,KAAK,EAAEX,MAAM,CAACY,KAPhB;AAQE,IAAA,QAAQ,EAAEV,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAyBE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,KAAK,EAAEF,MAAM,CAACa,QAPhB;AAQE,IAAA,QAAQ,EAAEX,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EAmCE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,QAAQ,EAAEE,WAFZ;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAPF,CAnCF,EA4CE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF,CADF,CADF;AAkDD,CAjEM","sourcesContent":["import React, {useState} from 'react';\nimport { useForm } from '../useForm';\nimport { TextField, Checkbox, Button } from '@material-ui/core';\nimport { RadioButtonsGroup } from './RadioGroup';\n\nexport const Form = () => {\n  const {\n    values,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit\n  } = useForm(submitted);\n\n  function submitted() {\n    console.log(\"submitted successfully\");\n  }\n\n  const [value, setValue] = useState('female');\n\n  return (\n    <form onSubmit={handleSubmit} noValidate>\n      <div className=\"form\">\n        <TextField\n          required\n          name=\"name\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          // helperText=\"Some important text\"\n          variant=\"outlined\"\n          value={values.name}\n          onChange={handleChange}\n        />\n        <RadioButtonsGroup\n          value={value}\n          onChange={val => setValue(val)}\n        />\n        <TextField\n          required\n          name=\"email\"\n          label=\"Email\"\n          autoComplete=\"off\"\n          // helperText=\"Some important text\"\n          variant=\"outlined\"\n          value={values.email}\n          onChange={handleChange}\n        />\n        <TextField\n          required\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          type=\"password\"\n          variant=\"outlined\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        <div className=\"form-checkbox\">\n          <Checkbox\n            checked={checked}\n            onChange={handleCheck}\n            value=\"secondary\"\n            color=\"primary\"\n          />\n          <p>A checkbox is a GUI widget that permits the user to make a binary choice</p>\n        </div>\n        <Button type=\"submit\" variant=\"contained\">SUBMIT</Button>\n      </div>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}