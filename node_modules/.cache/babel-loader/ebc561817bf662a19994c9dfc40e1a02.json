{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm2.js\";\nimport React from 'react';\nimport { Formik, Field, Form, useField } from 'formik';\nimport { Button, TextField, Checkbox, FormControlLabel, Radio } from \"@material-ui/core\";\nimport { validationSchema } from '../validation/validationSchema'; // import {validate} from '../validation/validate';\n\nconst CustomRadio = ({\n  label,\n  ...props\n}) => {\n  const [field] = useField(props);\n  return React.createElement(FormControlLabel, Object.assign({}, field, {\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }),\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nconst CustomTextField = ({\n  variant,\n  label,\n  autoComplete,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return React.createElement(TextField, Object.assign({}, field, {\n    variant: \"outlined\",\n    label: label,\n    autoComplete: \"off\",\n    helperText: errorText,\n    error: !!errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nexport const FormikForm2 = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      consent: true,\n      auth: \"authorized\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: (data, {\n      setSubmitting\n    }) => {\n      setSubmitting(true); //async call\n\n      console.log(data);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    isSubmitting\n  }) => React.createElement(Form, {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CustomTextField, {\n    name: \"name\",\n    type: \"input\",\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(CustomTextField, {\n    name: \"email\",\n    type: \"input\",\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(CustomTextField, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"single-checkbox-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"consent\",\n    type: \"checkbox\",\n    as: Checkbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Your consent is required here\"), errors.consent && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, errors.consent)), React.createElement(\"div\", {\n    className: \"radio-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CustomRadio, {\n    name: \"auth\",\n    type: \"radio\",\n    value: \"authorized\",\n    label: \"authorised\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(CustomRadio, {\n    name: \"auth\",\n    type: \"radio\",\n    value: \"unauthorized\",\n    label: \"unauthorised\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"SUBMIT\"), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, JSON.stringify(values, null, 2), JSON.stringify(errors, null, 2)))));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm2.js"],"names":["React","Formik","Field","Form","useField","Button","TextField","Checkbox","FormControlLabel","Radio","validationSchema","CustomRadio","label","props","field","CustomTextField","variant","autoComplete","meta","errorText","error","touched","FormikForm2","name","email","password","consent","auth","data","setSubmitting","console","log","values","errors","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Field, Form, useField} from 'formik';\nimport {Button, TextField, Checkbox, FormControlLabel, Radio} from \"@material-ui/core\";\nimport {validationSchema} from '../validation/validationSchema';\n// import {validate} from '../validation/validate';\n\n\nconst CustomRadio = ({label, ...props}) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel {...field} control={<Radio/>} label={label}/>\n  )\n};\n\nconst CustomTextField = ({variant, label, autoComplete, ...props}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      variant=\"outlined\"\n      label={label}\n      autoComplete=\"off\"\n      helperText={errorText}\n      error={!!errorText}\n    />\n  )\n};\n\nexport const FormikForm2 = () => {\n  return (\n    <div>\n      <Formik initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        consent: true,\n        auth: \"authorized\",\n      }} validationSchema={validationSchema}\n              onSubmit={(data, {setSubmitting}) => {\n        setSubmitting(true);\n        //async call\n        console.log(data);\n        setSubmitting(false);\n      }}\n      >\n        {({values, errors, isSubmitting}) => (\n          <Form className=\"form\">\n            <CustomTextField\n              name=\"name\"\n              type=\"input\"\n              label=\"Name\"\n            />\n            <CustomTextField\n              name=\"email\"\n              type=\"input\"\n              label=\"Email\"\n            />\n            <CustomTextField\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n            />\n            <div className=\"single-checkbox-wrap\">\n              <Field name=\"consent\" type=\"checkbox\" as={Checkbox}/>\n              <p>Your consent is required here</p>\n              {errors.consent && <p>{errors.consent}</p>}\n            </div>\n            <div className=\"radio-group\">\n              <CustomRadio name=\"auth\" type=\"radio\" value=\"authorized\" label=\"authorised\"/>\n              <CustomRadio name=\"auth\" type=\"radio\" value=\"unauthorized\" label=\"unauthorised\"/>\n            </div>\n            <Button type=\"submit\" variant=\"contained\">SUBMIT</Button>\n            <pre>\n              {JSON.stringify(values, null, 2)}\n              {JSON.stringify(errors, null, 2)}\n            </pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n};"]},"metadata":{},"sourceType":"module"}