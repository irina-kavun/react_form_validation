{"ast":null,"code":"import { useState } from 'react';\nexport const useForm = callback => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '' // checked: true\n\n  });\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleCheck = event => setChecked(event.target.checked);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    values,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit\n  };\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/useForm.js"],"names":["useState","useForm","callback","values","setValues","name","email","password","checked","setChecked","handleChange","event","value","target","handleCheck","handleSubmit","preventDefault"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,IAAI;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB,CAInC;;AAJmC,GAAD,CAApC;AAOA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAM;AAACN,MAAAA,IAAD;AAAOO,MAAAA;AAAP,QAAgBD,KAAK,CAACE,MAA5B;AACAT,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQO;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,WAAW,GAAGH,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACE,MAAN,CAAaL,OAAd,CAAvC;;AAEA,QAAMO,YAAY,GAAGJ,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AACAd,IAAAA,QAAQ;AACT,GAHD;;AAIA,SAAO;AACLC,IAAAA,MADK;AAELK,IAAAA,OAFK;AAGLE,IAAAA,YAHK;AAILI,IAAAA,WAJK;AAKLC,IAAAA;AALK,GAAP;AAOD,CA/BM","sourcesContent":["import { useState } from 'react';\n\nexport const useForm = callback => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    // checked: true\n  });\n\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    })\n  };\n\n  const handleCheck = event => setChecked(event.target.checked);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n  return {\n    values,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit\n  }\n};"]},"metadata":{},"sourceType":"module"}