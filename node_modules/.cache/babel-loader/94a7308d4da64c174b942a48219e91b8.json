{"ast":null,"code":"import { useState } from 'react';\nimport { validateForm } from \"./validateForm\";\nexport const useForm = ({\n  callback,\n  validateForm\n}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [checked, setChecked] = useState(true);\n  const [gender, setGender] = useState('female');\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleCheck = event => setChecked(event.target.checked);\n\n  const handleRadioSelect = value => setGender(value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    values,\n    gender,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit,\n    handleRadioSelect\n  };\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/form_validation/src/useForm.js"],"names":["useState","validateForm","useForm","callback","values","setValues","name","email","password","errors","setErrors","checked","setChecked","gender","setGender","handleChange","event","value","target","handleCheck","handleRadioSelect","handleSubmit","preventDefault"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA;AAAX,CAAD,KAA8B;AACnD,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAAD,CAApC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAAD,CAApC;AAMA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,QAAD,CAApC;;AAEA,QAAMe,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAM;AAACV,MAAAA,IAAD;AAAOW,MAAAA;AAAP,QAAgBD,KAAK,CAACE,MAA5B;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQW;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,WAAW,GAAGH,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAACE,MAAN,CAAaP,OAAd,CAAvC;;AACA,QAAMS,iBAAiB,GAAGH,KAAK,IAAIH,SAAS,CAACG,KAAD,CAA5C;;AAEA,QAAMI,YAAY,GAAGL,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACAnB,IAAAA,QAAQ;AACT,GAHD;;AAKA,SAAO;AACLC,IAAAA,MADK;AAELS,IAAAA,MAFK;AAGLF,IAAAA,OAHK;AAILI,IAAAA,YAJK;AAKLI,IAAAA,WALK;AAMLE,IAAAA,YANK;AAOLD,IAAAA;AAPK,GAAP;AASD,CAzCM","sourcesContent":["import { useState } from 'react';\nimport {validateForm} from \"./validateForm\";\n\nexport const useForm = ({callback, validateForm}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const [checked, setChecked] = useState(true);\n  const [gender, setGender] = useState('female');\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    })\n  };\n\n  const handleCheck = event => setChecked(event.target.checked);\n  const handleRadioSelect = value => setGender(value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    values,\n    gender,\n    checked,\n    handleChange,\n    handleCheck,\n    handleSubmit,\n    handleRadioSelect\n  }\n};"]},"metadata":{},"sourceType":"module"}