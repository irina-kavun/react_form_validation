{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm2.js\";\nimport React from 'react';\nimport { Formik, Field, Form, useField } from 'formik';\nimport { Button, TextField, Checkbox, FormControlLabel, Radio } from \"@material-ui/core\";\n\nconst CustomRadio = ({\n  label,\n  ...props\n}) => {\n  const [field] = useField(props);\n  return React.createElement(FormControlLabel, Object.assign({}, field, {\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }),\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nconst CustomTextField = props => {\n  const [field, meta] = useField(props);\n  return React.createElement(TextField, Object.assign({}, field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport const FormikForm2 = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      consent: true,\n      auth: \"authorized\"\n    },\n    onSubmit: (data, {\n      setSubmitting\n    }) => {\n      setSubmitting(true); //async call\n\n      console.log(data);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    values,\n    isSubmitting\n  }) => React.createElement(Form, {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    type: \"input\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    label: \"Name\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"input\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    label: \"Email\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    label: \"Password\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"single-checkbox-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"consent\",\n    type: \"checkbox\",\n    as: Checkbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Your consent is required here\")), React.createElement(\"div\", {\n    className: \"radio-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CustomRadio, {\n    name: \"auth\",\n    type: \"radio\",\n    value: \"authorized\",\n    label: \"authorised\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(CustomRadio, {\n    name: \"auth\",\n    type: \"radio\",\n    value: \"unauthorized\",\n    label: \"unauthorised\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SUBMIT\"), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, JSON.stringify(values, null, 2)))));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm2.js"],"names":["React","Formik","Field","Form","useField","Button","TextField","Checkbox","FormControlLabel","Radio","CustomRadio","label","props","field","CustomTextField","meta","FormikForm2","name","email","password","consent","auth","data","setSubmitting","console","log","values","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Field, Form, useField} from 'formik';\nimport {Button, TextField, Checkbox, FormControlLabel, Radio} from \"@material-ui/core\";\n\nconst CustomRadio = ({label, ...props}) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel {...field} control={<Radio/>} label={label}/>\n  )\n};\n\nconst CustomTextField = props => {\n  const [field, meta] = useField(props)\n  return(\n    <TextField {...field}/>\n  )\n};\n\nexport const FormikForm2 = () => {\n  return (\n    <div>\n      <Formik initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        consent: true,\n        auth: \"authorized\",\n\n      }} onSubmit={(data, {setSubmitting}) => {\n        setSubmitting(true);\n        //async call\n        console.log(data);\n        setSubmitting(false);\n      }}\n      >\n        {({values, isSubmitting}) => (\n          <Form className=\"form\">\n            <Field\n              name=\"name\"\n              type=\"input\"\n              autoComplete=\"off\"\n              variant=\"outlined\"\n              label=\"Name\"\n              as={TextField}\n            />\n            <Field\n              name=\"email\"\n              type=\"input\"\n              autoComplete=\"off\"\n              variant=\"outlined\"\n              label=\"Email\"\n              as={TextField}\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"off\"\n              variant=\"outlined\"\n              label=\"Password\"\n              as={TextField}\n            />\n            <div className=\"single-checkbox-wrap\">\n              <Field name=\"consent\" type=\"checkbox\" as={Checkbox}/>\n              <p>Your consent is required here</p>\n            </div>\n            <div className=\"radio-group\">\n              <CustomRadio name=\"auth\" type=\"radio\" value=\"authorized\" label=\"authorised\"/>\n              <CustomRadio name=\"auth\" type=\"radio\" value=\"unauthorized\" label=\"unauthorised\"/>\n            </div>\n            <Button type=\"submit\" variant=\"contained\">SUBMIT</Button>\n            <pre>\n              {JSON.stringify(values, null, 2)}\n            </pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n};"]},"metadata":{},"sourceType":"module"}