{"ast":null,"code":"var _jsxFileName = \"/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { useFormik, Field } from 'formik';\nimport { validationSchema } from '../validation/validationSchema';\nimport { Button, TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\nexport const FormikForm = () => {\n  const {\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    values,\n    errors\n  } = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      isEnabled: true\n    },\n    validationSchema,\n\n    onSubmit(values) {\n      console.log(values);\n    }\n\n  }); // useEffect(()=> {\n  //   if(Object.keys(errors).length === 0 && isSubmitting) {\n  //     console.log(values);\n  //   }\n  // }, [errors]);\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"page-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Form Validation with Formik\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.name\n  }, errors.name && {\n    helperText: errors.name,\n    error: true\n  }, {\n    name: \"name\",\n    label: \"Name\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.email\n  }, errors.email && {\n    helperText: errors.email,\n    error: true\n  }, {\n    name: \"email\",\n    label: \"Email\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    required: true,\n    onChange: handleChange,\n    values: values.email\n  }, errors.password && {\n    helperText: errors.password,\n    error: true\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      type: \"checkbox\",\n      checked: values.isEnabled,\n      onChange: handleChange(\"isEnabled\"),\n      name: \"isEnabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    label: \"This is a consent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), errors.isEnabled && React.createElement(\"div\", {\n    className: \"form-field-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, errors.isEnabled), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/Practicing/react_form_validation/src/pages/FormikForm.js"],"names":["React","Fragment","useEffect","useFormik","Field","validationSchema","Button","TextField","FormControlLabel","Checkbox","FormikForm","handleChange","handleSubmit","isSubmitting","values","errors","initialValues","name","email","password","isEnabled","onSubmit","console","log","helperText","error"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport {useFormik, Field} from 'formik';\nimport {validationSchema} from '../validation/validationSchema';\n\nimport {Button, TextField, FormControlLabel, Checkbox} from \"@material-ui/core\";\n\nexport const FormikForm = () => {\n  const {handleChange, handleSubmit, isSubmitting, values, errors} = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      isEnabled: true,\n    },\n    validationSchema,\n    onSubmit(values) {\n      console.log(values)\n    }\n  });\n\n  // useEffect(()=> {\n  //   if(Object.keys(errors).length === 0 && isSubmitting) {\n  //     console.log(values);\n  //   }\n  // }, [errors]);\n\n  return (\n    <Fragment>\n      <h1 className=\"page-title\">Form Validation with Formik</h1>\n      <form onSubmit={handleSubmit} noValidate className=\"form\">\n        <TextField\n          required\n          onChange={handleChange}\n          values={values.name}\n          {...errors.name && {helperText: errors.name, error: true}}\n          name=\"name\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n        <TextField\n          required\n          onChange={handleChange}\n          values={values.email}\n          {...errors.email && {helperText: errors.email, error: true}}\n          name=\"email\"\n          label=\"Email\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n        <TextField\n          required\n          onChange={handleChange}\n          values={values.email}\n          {...errors.password && {helperText: errors.password, error: true}}\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          variant=\"outlined\"\n        />\n        <FormControlLabel\n          control={<Checkbox\n            type=\"checkbox\"\n            checked={values.isEnabled}\n            onChange={handleChange(\"isEnabled\")}\n            name=\"isEnabled\"\n          />} label=\"This is a consent\"\n        />\n        {errors.isEnabled && <div className=\"form-field-error\">{errors.isEnabled}</div>}\n        <Button type=\"submit\" variant=\"contained\">SUBMIT</Button>\n      </form>\n    </Fragment>\n  )\n};"]},"metadata":{},"sourceType":"module"}